extends ../layout.pug
include ../components/icon_svg.pug

block content
  main.tc-container
    .content
      .to-noobs
        span.title.tc-font-title 有些话想说
        p
          | 1. 千万别当程序员。
          br
          | 2. 干了就要变成加班的代名词，一天十二小时。
          br
          | 3. 如果加班多的话，工资得多要，才对得起身体啊！
          br
          | 4. 工资少，还老委屈了，二话不说走人先。
          br
          | 5. 回家卖烧饼月入一两万了解一下······
      section.articles
        ul.list
          -
            const articles = [
              {
                id: 'abc',
                title: '闭包',
                time: '刚刚',
                tag: 'JavaScript',
                content: '闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面向对象编程。在面向对象编程中，对象允许我们将某些数据（对象的属性）与一个或者多个方法相关联。因此，通常你使用只有一个方法的对象的地方，都可以使用闭包。在 Web 中，你想要这样做的情况特别常见。大部分我们所写的 JavaScript 代码都是基于...',
              }, {
                id: 'dfa',
                title: '关于打酱油',
                time: '12小时',
                tag: '生活',
                content: '闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面向对象编程。在面向对象编程中，对象允许我们将某些数据（对象的属性）与一个或者多个方法相关联。',
              }, {
                id: 'gfa',
                title: '很久很久以前',
                time: '2017.03.07',
                tag: '其它',
                content: '闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面',
              },
            ];
          
          each article in articles
            li.list-item.tc-list-item-article
              h3.title
                a.tc-font-title(href= `/articles/detail?id=${article.id}`)= article.title
              .description
                label(title="发布时间")= article.time
                i.tc-divider
                label(title="分类标签")= article.tag
              p= article.content
        .actions
          button#more.tc-button.tc-ripple 加载更多
          a(href="/articles") 查看所有

    aside.info-nav
      .tag-cloud
        span.title.tc-font-title 标签云
        -
          const tags = [
            {
              value: 'js',
              text: 'JavaScript',
              click: 12000,
            }, {
              value: 'html',
              text: 'Html',
              click: 200,
            }, {
              value: 'css',
              text: 'Css',
              click: 10,
            }, {
              value: 'backend',
              text: '后端',
              click: 500,
            }, {
              value: 'life',
              text: '生活',
              click: 300,
            }, {
              value: 'other',
              text: '其它',
              click: 0,
            },
            {
              value: 'js',
              text: 'JavaScript',
              click: 12000,
            }, {
              value: 'html',
              text: 'Html',
              click: 200,
            }, {
              value: 'css',
              text: 'Css',
              click: 10,
            }, {
              value: 'backend',
              text: '后端',
              click: 500,
            }, {
              value: 'life',
              text: '生活',
              click: 300,
            }, {
              value: 'other',
              text: '其它',
              click: 0,
            },
          ];
          const realTags = resolveTags(tags).sort(() => Math.random() - 0.5);

          function resolveTags(arr) {
            // 把tags分成了四个级别；xl、l、m、s。比例分别为：1、10%、40%、50%
            const l = 0 + Math.round(arr.length * 0.1);
            const m = l + Math.round(arr.length * 0.4);
            // 取色地址：http://encycolorpedia.cn/009688
            const colors = ['#ff6977', '#00bbaa', '#008b8b', '#009688', '#128378', '#4b4b4b', '#007066', '#008080'];
            // 先排序之
            const sortTags = arr.sort((val1, val2) => val2.click - val1.click);

            sortTags.forEach((val, i) => {
              const color = colors[Math.round(Math.random() * 7)];
              let className = '';

              if (i === 0) className = 'xl';
              else if (i <= l) className = 'l';
              else if (i <= m) className = 'm';

              sortTags[i] = Object.assign(val, { color, className });
            });
            return sortTags;
          }
        .tags
          each tag in realTags
            a(class= `tag ${tag.className}`, href="/", data-value= tag.value, style= `color: ${tag.color}`)= tag.text
      figure.topics
        figcaption.tc-font-title Topics
        - const topics = ['这个特别多', '第二', '多拉风拉的屎访问访问地方打发打发的说法大法打发大水', '什么呢？', 'Hdfa daswf dasf', '啊第三方打发第三方', '多拉风拉的屎访问访问', '什么呢？', 'Hdfa daswf dasf', '啊第三方打发第三方']
        ul.list
          each data, i in topics
            li.list-item
              if i < 3
                +icon('fire', 20, '#ff6977', 'list-style', `opacity: ${1 - (i / 5)}`)
                //- img.list-style(src= require('../assets/icon_fire.png'), style= `opacity: ${1 - (i / 5)}`, width=20, height=20)
              else
                span.list-style= i + 1
              a(href="/")= data

